{{- if eq .Values.postgres.mode "selfcontained" }}
{{- include "kudos.validate.postgresql" . }}
apiVersion: v1
kind: Service
metadata:
  name: {{ template "kudos.postgresql.fullname" . }}
  labels:
    {{- include "kudos.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  type: ClusterIP
  ports:
    - port: {{ template "kudos.postgresql.port" . }}
      targetPort: 5432
      protocol: TCP
      name: postgresql
  selector:
    {{- include "kudos.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "kudos.postgresql.fullname" . }}
  labels:
    {{- include "kudos.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  serviceName: {{ template "kudos.postgresql.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "kudos.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      labels:
        {{- include "kudos.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
        runAsNonRoot: true
      containers:
        - name: postgresql
          image: "postgres:{{ .Values.postgres.version }}"
          imagePullPolicy: IfNotPresent
          securityContext:
            {{- toYaml .Values.postgres.selfcontained.securityContext | nindent 12 }}
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ template "kudos.postgresql.database" . }}
            - name: POSTGRES_USER
              value: {{ template "kudos.postgresql.user" . }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "kudos.postgresql.secretName" . }}
                  key: {{ template "kudos.postgresql.secretKey" . }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$(POSTGRES_USER)" -d "dbname=$(POSTGRES_DB)" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "$(POSTGRES_USER)" -d "dbname=$(POSTGRES_DB)" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            {{- toYaml .Values.postgres.selfcontained.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: pgdata
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "kudos.labels" . | nindent 10 }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.postgres.selfcontained.storage.storageClass }}
        storageClassName: {{ .Values.postgres.selfcontained.storage.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgres.selfcontained.storage.size }}
---
{{- if not .Values.app.db.passwordSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "kudos.postgresql.secretName" . }}
  labels:
    {{- include "kudos.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
type: Opaque
data:
  {{ template "kudos.postgresql.secretKey" . }}: {{ randAlphaNum 40 | b64enc | quote }}
{{- end }}
{{- end }}
