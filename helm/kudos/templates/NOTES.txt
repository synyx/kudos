üéâ Kudos has been deployed successfully!

To access your application:

{{- if .Values.ingress.enabled }}
{{- if .Values.ingress.tls }}
  https://{{ (first .Values.ingress.hosts).host }}
{{- else }}
  http://{{ (first .Values.ingress.hosts).host }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "kudos.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "kudos.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress) }}{{.ip}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "kudos.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:3000
{{- end }}

üìä Database Configuration:
  Host: {{ .Values.postgresql.host }}
  Port: {{ .Values.postgresql.port | default 5432 }}
  Database: {{ .Values.postgresql.database | default "kudos" }}
  SSL Mode: {{ .Values.postgresql.sslMode | default "disable" }}
{{- if .Values.postgresql.auth.existingSecret }}
  Authentication: Using existing secret '{{ .Values.postgresql.auth.existingSecret }}'
{{- else }}
  Authentication: Using generated secret '{{ include "kudos.postgresql.secretName" . }}'
{{- end }}

‚ö†Ô∏è  Database Management:
Kudos no longer manages PostgreSQL infrastructure. You must:
  1. Set up your own PostgreSQL database (see DATABASE_SETUP.md)
  2. Ensure the database is accessible from your Kubernetes cluster
  3. Configure credentials using the postgresql.auth settings

üîç Monitor your deployment:
  kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }}
  kubectl logs -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }} -f

üíæ Database migration scripts are available in kudos-gitlab/scripts/
  - db-export.sh: Export data from existing database
  - db-import.sh: Import data to new database

üìñ Need help setting up a database? Check DATABASE_SETUP.md in the project root!

