{{- define "kudos.notes" -}}
🎉 This release of Kudos has been deployed successfully!

To access your application, follow the instructions below:

{{- if .Values.ingress.enabled }}
1. Get the application URL by running these commands:
{{- if .Values.ingress.tls }}
  https://{{ (first .Values.ingress.hosts).host }}
{{- else }}
  http://{{ (first .Values.ingress.hosts).host }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "kudos.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "kudos.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "kudos.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress) }}{{.ip}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "kudos.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:3000
{{- end }}

📊 PostgreSQL Configuration:
Your application is configured to use PostgreSQL with mode: {{ .Values.postgres.mode }}

{{- if eq .Values.postgres.mode "selfcontained" }}
✅ A self-contained PostgreSQL instance was deployed.
  Host: {{ template "kudos.postgresql.fullname" . }}
  Database: {{ template "kudos.postgresql.database" . }}
  User: {{ template "kudos.postgresql.user" . }}
  Secret: {{ template "kudos.postgresql.secretName" . }}
  Storage: {{ .Values.postgres.selfcontained.storage.size }}

To connect to PostgreSQL:
  kubectl exec -it -n {{ .Release.Namespace }} {{ template "kudos.postgresql.fullname" . }}-0 -- psql -U {{ template "kudos.postgresql.user" . }} -d {{ template "kudos.postgresql.database" . }}
{{- end }}

{{- if eq .Values.postgres.mode "operator" }}
🔗 The application is configured to connect to a PostgreSQL cluster managed by the Zalando Operator.
Please ensure the following resources exist:
  - A 'postgresql' custom resource named '{{ .Values.postgres.operator.clusterName }}' in namespace '{{ default .Release.Namespace .Values.postgres.operator.namespace }}'.
  - A secret named '{{ template "kudos.postgresql.secretName" . }}' containing the key 'password'.

  Connection details:
    Host: {{ template "kudos.postgresql.host" . }}
    Database: {{ template "kudos.postgresql.database" . }}
    User: {{ template "kudos.postgresql.user" . }}
    Instances: {{ .Values.postgres.operator.numberOfInstances }}
    Storage: {{ .Values.postgres.operator.storage.size }}

To check the cluster status:
  kubectl get postgresql -n {{ default .Release.Namespace .Values.postgres.operator.namespace }} {{ .Values.postgres.operator.clusterName }}

To connect to PostgreSQL:
  kubectl exec -it -n {{ default .Release.Namespace .Values.postgres.operator.namespace }} {{ .Values.postgres.operator.clusterName }}-0 -- psql -U {{ template "kudos.postgresql.user" . }} -d {{ template "kudos.postgresql.database" . }}
{{- end }}

🔍 To monitor your deployment:
  kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }}
  kubectl logs -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }} -f

💾 For database backup/restore in Kubernetes:
{{- if eq .Values.postgres.mode "selfcontained" }}
  # Export database
  kubectl exec -n {{ .Release.Namespace }} {{ template "kudos.postgresql.fullname" . }}-0 -- pg_dump -U {{ template "kudos.postgresql.user" . }} -d {{ template "kudos.postgresql.database" . }} -Fc > backup.dump

  # Import database  
  kubectl exec -i -n {{ .Release.Namespace }} {{ template "kudos.postgresql.fullname" . }}-0 -- pg_restore -U {{ template "kudos.postgresql.user" . }} -d {{ template "kudos.postgresql.database" . }} --clean < backup.dump
{{- end }}
{{- if eq .Values.postgres.mode "operator" }}
  Use the provided db-export.sh and db-import.sh scripts in the kudos-gitlab repository.
{{- end }}

{{- end -}}

