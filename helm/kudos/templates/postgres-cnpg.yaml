{{- if eq .Values.postgres.mode "cnpg" }}
{{- include "kudos.validate.postgresql" . }}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ include "kudos.cnpg.clusterName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kudos.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  instances: {{ .Values.postgres.cnpg.instances | default 1 }}

  {{- if .Values.postgres.cnpg.resources }}
  resources:
    {{- toYaml .Values.postgres.cnpg.resources | nindent 4 }}
  {{- end }}

  storage:
    size: {{ .Values.postgres.cnpg.volume.size | default "10Gi" }}
    {{- if .Values.postgres.cnpg.volume.storageClass }}
    storageClass: {{ .Values.postgres.cnpg.volume.storageClass }}
    {{- end }}

  bootstrap:
    initdb:
      database: {{ include "kudos.postgresql.database" . }}
      owner: {{ include "kudos.postgresql.user" . }}
      secret:
        name: {{ include "kudos.postgresql.secretName" . }}

---
{{- if eq (include "kudos.postgresql.shouldCreateSecret" .) "true" }}
# Create a secret for the application user
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "kudos.cnpg.secretName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kudos.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
type: kubernetes.io/basic-auth
data:
  username: {{ include "kudos.postgresql.user" . | b64enc }}
  password: {{ randAlphaNum 32 | b64enc }}
{{- end }}
{{- end }}
