# Kudos Application Configuration
# Simple, social recognition platform for teams

# Application deployment settings
replicaCount: 1

# Container image configuration
image:
  repository: ghcr.io/synyx/kudos
  pullPolicy: IfNotPresent
  tag: main

# Application-specific configuration
app:
  # Public URL where the application is accessible
  origin: https://localhost

# External PostgreSQL database configuration
postgresql:
  # Database connection details
  host: ""  # REQUIRED: PostgreSQL host (e.g., "postgres.database.svc.cluster.local" or external hostname)
  port: 5432
  database: "kudos"
  sslMode: "disable"  # Options: disable, allow, prefer, require, verify-ca, verify-full
  
  # Authentication configuration
  auth:
    # Existing secret containing database credentials
    existingSecret: ""  # REQUIRED if createSecret is false
    usernameKey: "username"  # Key in the secret containing the username
    passwordKey: "password"  # Key in the secret containing the password
    
    # Create new secret with credentials (only if existingSecret is empty)
    createSecret: false  # Set to true to create a new secret
    username: "kudos"    # Username for new secret (only used if createSecret is true)
    password: ""         # REQUIRED: Password for new secret (only used if createSecret is true)

# Kubernetes deployment configuration
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

podAnnotations: {}
podSecurityContext: {}
securityContext: {}

# Service configuration
service:
  type: ClusterIP
  port: 80

# Ingress configuration
ingress:
  enabled: false
  className: ''
  annotations: {}
  hosts:
    - host: localhost
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Pod placement configuration
nodeSelector: {}
tolerations: []
affinity: {}
